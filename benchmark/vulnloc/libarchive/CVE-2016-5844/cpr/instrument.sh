#!/bin/bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
benchmark_name=$(echo $script_dir | rev | cut -d "/" -f 4 | rev)
project_name=$(echo $script_dir | rev | cut -d "/" -f 3 | rev)
bug_id=$(echo $script_dir | rev | cut -d "/" -f 2 | rev)
dir_name=$1/$benchmark_name/$project_name/$bug_id
mkdir $dir_name/cpr
cd $dir_name/src
make clean



CC=wllvm CXX=wllvm++ ./configure --without-openssl --without-xml2 CFLAGS='-g -O0 -static' CXXFLAGS='-g -O0 -static'

sed -i '1093i klee_assert( vd->location < 1048576 );\n' libarchive/archive_read_support_format_iso9660.c
sed -i '1093i CPR_OUTPUT("obs", "i32", 1048576-vd->location);' libarchive/archive_read_support_format_iso9660.c
sed -i '1093i if(__cpr_choice("L515", "bool", (int[]){temp, vd->location, skipsize, iso9660->current_position, iso9660->entry_sparse_offset}, (char*[]){"x", "y", "z", "m", "n"}, 5, (int*[]){}, (char*[]){}, 0)) return (ARCHIVE_FATAL);' libarchive/archive_read_support_format_iso9660.c
sed -i '1093i int temp = 1048576 - vd->location;' libarchive/archive_read_support_format_iso9660.c
sed -i '54i #ifndef CPR_OUTPUT\n#define CPR_OUTPUT(id, typestr, value) value\n#endif\n' libarchive/archive_read_support_format_iso9660.c
sed -i '54i #include <klee/klee.h>' libarchive/archive_read_support_format_iso9660.c
# git add libarchive/archive_read_support_format_iso9660.c
# git commit -m "instrument cpr"

make CXX=wllvm++ CC=wllvm CFLAGS='-I/klee/source/include -Wno-error' CXXFLAGS=$CFLAGS LDFLAGS='-lkleeRuntest -L/klee/build/lib -lcpr_runtime -L/CPR/lib' -j32


cat <<EOF > $dir_name/cpr/repair.conf
project_path:$dir_name
tag_id:$bug_id
src_directory:src
binary_path:bsdtar
config_command:skip
build_command:skip
custom_comp_list:cpr/components/x.smt2,cpr/components/y.smt2,cpr/components/z.smt2,cpr/components/m.smt2,cpr/components/n.smt2
general_comp_list:equal.smt2,less-than.smt2,not-equal.smt2,less-or-equal.smt2,constant_a.smt2
test_input_list:-tf \$POC
test_output_list:cpr/t1.smt2
poc_path:$script_dir/../tests/1.iso
depth:3
loc_patch:$dir_name/src/libarchive/archive_read_support_format_iso9660.c:1098
loc_bug:$dir_name/src/libarchive/archive_read_support_format_iso9660.c:1099
klee_flags:-check-overshift=0
dist_metric:angelic
timeout_klee:1800
EOF


# Create patch components
mkdir $dir_name/cpr/components
declare -a arr_var=("x" "y" "z" "m" "n")
# Create components for program variables
for i in "${arr_var[@]}"
do
cat <<EOF > $dir_name/cpr/components/$i.smt2
(declare-const rvalue_$i (_ BitVec 32))
(declare-const lvalue_$i (_ BitVec 32))
(declare-const rreturn (_ BitVec 32))
(declare-const lreturn (_ BitVec 32))
(assert (and (= rreturn rvalue_$i) (= lreturn lvalue_$i)))
EOF
done


# Create Specification Files
cat <<EOF > $dir_name/cpr/spec.smt2
(declare-fun output!i32!obs!0 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (=  true (bvsgt (concat  (select  output!i32!obs!0 (_ bv3 32) ) (concat  (select  output!i32!obs!0 (_ bv2 32) ) (concat  (select  output!i32!obs!0 (_ bv1 32) ) (select  output!i32!obs!0 (_ bv0 32) ) ) ) ) (_ bv0 32)) ))
EOF

cat <<EOF > $dir_name/cpr/t1.smt2
(declare-const obs!0 (_ BitVec 32))
(assert (= true (bvsgt obs!0 (_ bv0 32) )))
EOF


if [ ! -f "$dir_name/src/INSTRUMENTED_CPR" ]; then
    touch "$dir_name/src/INSTRUMENTED_CPR"
fi
