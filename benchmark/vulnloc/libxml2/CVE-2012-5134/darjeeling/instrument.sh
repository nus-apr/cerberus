#!/bin/bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
benchmark_name=$(echo $script_dir | rev | cut -d "/" -f 4 | rev)
project_name=$(echo $script_dir | rev | cut -d "/" -f 3 | rev)
bug_id=$(echo $script_dir | rev | cut -d "/" -f 2 | rev)
dir_name=$1/$benchmark_name/$project_name/$bug_id
exp_dir_path=/experiment/$benchmark_name/$project_name/$bug_id
setup_dir_path=/setup/$benchmark_name/$project_name/$bug_id
fix_file=$2
IFS='/' read -r -a array <<< "$fix_file"
file_name=${array[-1]}

cat <<EOF > darjeeling-driver
#!/bin/bash
$setup_dir_path/test.sh /experiment 1 \${1:-}
EOF
chmod +x darjeeling-driver

cat <<EOF > Dockerfile
FROM rshariffdeen/cerberus:darjeeling
USER root
RUN mkdir -p /setup/$benchmark_name/$project_name/$bug_id
COPY . $setup_dir_path
COPY darjeeling/darjeeling-driver $setup_dir_path
RUN /setup/$benchmark_name/$project_name/$bug_id/setup.sh /experiment
RUN cp /setup/$benchmark_name/$project_name/$bug_id/valkyrie/$file_name  /experiment/$benchmark_name/$project_name/$bug_id/src/$fix_file
WORKDIR /experiment
EOF

cd $script_dir/..
tag_id=$(echo "$bug_id" | awk '{print tolower($0)}')
docker build -t $tag_id -f darjeeling/Dockerfile .

cat <<EOF > $dir_name/src/repair.yml
algorithm:
  type: exhaustive
coverage:
  method:
    type: gcov
  load-from-file: coverage.yml
localization:
  type: spectrum-based
  metric: tarantula
  restrict-to-files:
  - $fix_file
optimizations:
  ignore-dead-code: true
  ignore-equivalent-insertions: true
  ignore-string-equivalent-snippets: true
program:
  build-instructions:
    steps:
    - command: ./config.sh /experiment
      directory: $setup_dir_path
    - command: ./build.sh /experiment
      directory: $setup_dir_path
    steps-for-coverage:
    - command: CFLAGS="--coverage -fsanitize-recover=address" CXXFLAGS="--coverage -fsanitize-recover=address"  LDFLAGS="--coverage -fsanitize-recover=address" ./config.sh /experiment
      directory: $setup_dir_path
    - command: CFLAGS="--coverage -fsanitize-recover=address" CXXFLAGS="--coverage -fsanitize-recover=address" LDFLAGS="--coverage -fsanitize-recover=address" ./build.sh /experiment
      directory: $setup_dir_path
    time-limit: 30
  image: $tag_id
  language: c
  source-directory: $exp_dir_path/src
  tests:
    tests:
    - ./darjeeling-driver
    time-limit: 5
    type: shell
    workdir: $setup_dir_path
resource-limits:
  candidates: 100000
seed: 0
threads: 1
transformations:
  schemas:
  - type: delete-statement
  - type: append-statement
  - type: prepend-statement
  - type: replace-statement
version: 1.0
EOF

cat <<EOF > $dir_name/src/coverage.yml
- lines:
    $fix_file: [4078, 4079, 4080, 4075, 3972, 3928, 3920, 3921, 3922]
  name: t0
  outcome:
    successful: False
    time-taken: 0.05

EOF
