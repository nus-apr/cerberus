#!/bin/bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
benchmark_name=$(echo $script_dir | rev | cut -d "/" -f 4 | rev)
project_name=$(echo $script_dir | rev | cut -d "/" -f 3 | rev)
bug_id=$(echo $script_dir | rev | cut -d "/" -f 2 | rev)
dir_name=$1/$benchmark_name/$project_name/$bug_id
mkdir $dir_name/cpr
cd $dir_name/src
rm -rf build
mkdir build
cd build
cmake -G"Unix Makefiles" -DCMAKE_C_COMPILER=$CPR_CC -DCMAKE_EXE_LINKER_FLAGS='-lkleeRuntest' -DCMAKE_C_FLAGS_RELEASE='-g -O0 -D_NO_STRING_INLINES -DFORTIFY_SOURCE=0' -DREQUIRE_SIMD=0 -DWITH_SIMD=0 ..
make -j32
cd ..
sed -i '511i if(cinfo->quantize_colors) klee_abort();' wrbmp.c
sed -i '505d;506d' wrbmp.c
sed -i '505i CPR_OUTPUT("obs", "i32", cinfo->quantize_colors );\n' wrbmp.c
sed -i '505i   } else if ( __cpr_choice("L1229", "bool", (int[]){cinfo->quantize_colors, dest->pub.put_pixel_rows}, (char*[]){"x", "y"}, 2, (int*[]){}, (char*[]){}, 0) && (cinfo->out_color_space == JCS_RGB565 || cinfo->out_color_space == JCS_CMYK)) {' wrbmp.c
sed -i '27i #ifndef CPR_OUTPUT\n#define CPR_OUTPUT(id, typestr, value) value\n#endif\n' wrbmp.c


git add wrbmp.c
git commit -m "instrument cpr"
cd build; make -j32



cat <<EOF > $dir_name/cpr/repair.conf
project_path:$dir_name
tag_id:$bug_id
src_directory:src
config_command:skip
build_command:skip
depth:3
test_output_list:cpr/t1.smt2
spec_path:cpr/spec.smt2
binary_path:build/djpeg-static
custom_comp_list:cpr/components/x.smt2,cpr/components/y.smt2
general_comp_list:equal.smt2,not-equal.smt2,less-than.smt2,less-or-equal.smt2,constant_a.smt2
test_input_list:-colors 256 -bmp \$POC
poc_path:$script_dir/../tests/1.jpg
loc_patch:$dir_name/src/wrbmp.c:509
loc_bug:$dir_name/src/wrbmp.c:510
gen_limit:40
mask_arg:0,1,2


EOF


# Create patch components
mkdir $dir_name/cpr/components
declare -a arr_var=("x" "y")
# Create components for program variables
for i in "${arr_var[@]}"
do
cat <<EOF > $dir_name/cpr/components/$i.smt2
(declare-const rvalue_$i (_ BitVec 32))
(declare-const lvalue_$i (_ BitVec 32))
(declare-const rreturn (_ BitVec 32))
(declare-const lreturn (_ BitVec 32))
(assert (and (= rreturn rvalue_$i) (= lreturn lvalue_$i)))
EOF
done


# Create Specification Files
cat <<EOF > $dir_name/cpr/spec.smt2
(declare-fun output!i32!obs!0 () (Array (_ BitVec 32) (_ BitVec 8) ) )
(assert (= true (= (concat  (select  output!i32!obs!0 (_ bv3 32) ) (concat  (select  output!i32!obs!0 (_ bv2 32) ) (concat  (select  output!i32!obs!0 (_ bv1 32) ) (select  output!i32!obs!0 (_ bv0 32) ) ) ) ) (_ bv0 32)) ))

EOF

cat <<EOF > $dir_name/cpr/t1.smt2
(declare-const obs!0 (_ BitVec 32))
(assert (= true (= obs!0 (_ bv0 32) )))
EOF

if [ ! -f "$dir_name/src/INSTRUMENTED_CPR" ]; then
    touch "$dir_name/src/INSTRUMENTED_CPR"
fi
