#!/bin/bash
script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
benchmark_name=$(echo $script_dir | rev | cut -d "/" -f 3 | rev)
project_name=$(echo $script_dir | rev | cut -d "/" -f 2 | rev)
bug_id=$(echo $script_dir | rev | cut -d "/" -f 1 | rev)
dir_name=$1/$benchmark_name/$project_name/$bug_id
cd $dir_name/src

PROJECT_CFLAGS="-fsanitize=undefined -static -ggdb"
PROJECT_CXXFLAGS="-fsanitize=undefined -static -ggdb"
PROJECT_LDFLAGS="-static -fsanitize=undefined"


if [[ -n "${CFLAGS}" ]]; then
  PROJECT_CFLAGS="${PROJECT_CFLAGS} ${CFLAGS}"
fi
if [[ -n "${CXXFLAGS}" ]]; then
  PROJECT_CXXFLAGS="${PROJECT_CXXFLAGS} ${CXXFLAGS}"
fi
if [[ -n "${LDFLAGS}" ]]; then
  PROJECT_LDFLAGS="${PROJECT_LDFLAGS} ${LDFLAGS}"
fi

make CFLAGS="${PROJECT_CFLAGS}" CXXFLAGS="${PROJECT_CXXFLAGS}" LDFLAGS="${PROJECT_LDFLAGS}" -j`nproc`
gcc -fsanitize=undefined -I./include/ -L./.libs/  -lxml2 xzlib.o list.o debugXML.o HTMLparser.o xmlschemas.o xinclude.o xmlsave.o xmlreader.o SAX.o HTMLtree.o xmlschemastypes.o xmlunicode.o schematron.o nanohttp.o xmlregexp.o nanoftp.o catalog.o pattern.o xpointer.o  uri.o threads.o SAX2.o relaxng.o encoding.o entities.o chvalid.o error.o hash.o xmlstring.o valid.o dict.o xmlIO.o xpath.o buf.o xmlmemory.o globals.o parser.o parserInternals.o tree.o  $script_dir/poc/poc.c -o poc -lm -lz -llzma
