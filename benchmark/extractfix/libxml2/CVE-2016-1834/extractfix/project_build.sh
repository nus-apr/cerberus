#!/bin/bash
compile_type=$1

subject=poc
current_dir="$( cd "$(dirname "$0")" ; pwd -P )"

cd project/klee
export LLVM_COMPILER=clang
make -j32


cflags="-g -D__NO_STRING_INLINES  -D_FORTIFY_SOURCE=0 -U__OPTIMIZE__ -lkleeRuntest -lkleeBasic -I${current_dir}/project_specific_lib/ -lhook -L${current_dir}/project_specific_lib/ -Wno-everything"
if [ $compile_type == 'lowfat' ];
then
        compiler=${LOWFAT_CLANG}
        cflags="$cflags -fsanitize=signed-integer-overflow,unsigned-integer-overflow -fsanitize=lowfat -mllvm -lowfat-debug -mllvm -lowfat-no-check-reads -mllvm -lowfat-no-check-writes -mllvm -lowfat-no-check-memset -mllvm -lowfat-no-check-memcpy -mllvm -lowfat-no-check-escapes -mllvm -lowfat-no-check-fields -mllvm -lowfat-check-whole-access -mllvm -lowfat-no-replace-globals -mllvm -lowfat-no-replace-alloca -mllvm -lowfat-no-replace-malloc -mllvm -lowfat-symbolize -lstlimpl"
        ${compiler} ${cflags} -I../include/ -I./include -L.libs/ -lxml2 xzlib.o list.o debugXML.o HTMLparser.o xmlschemas.o xinclude.o xmlsave.o xmlreader.o SAX.o HTMLtree.o xmlschemastypes.o xmlunicode.o schematron.o nanohttp.o xmlregexp.o nanoftp.o catalog.o pattern.o xpointer.o  uri.o threads.o SAX2.o relaxng.o encoding.o entities.o chvalid.o error.o hash.o xmlstring.o valid.o dict.o xmlIO.o xpath.o buf.o xmlmemory.o globals.o parser.o parserInternals.o tree.o  ../../poc.c -o poc -lm -lz -llzma

        # copy target to root dir
        cp ${subject} ../
fi

# copy target to root dir
cp ${subject} ../

if [ $compile_type == 'to_bc' ];
then
    sed -i "s/size = xmlStrlen(cur)/\/\/size=xmlStrlen(cur)/" ../xmlstring.c
    KLEE_CFLAGS="-lkleeRuntest -lkleeBasic -lhook -L${current_dir}/project_specific_lib/"
    PROJECT_CFALGS="./.libs/libxml2.a -I./include -L./.libs/ -lxml2 -lz -llzma -lm -ldl"

    # get .o
    wllvm -g -D__NO_STRING_INLINES  -D_FORTIFY_SOURCE=0 -U__OPTIMIZE__ -lkleeRuntest -lkleeBasic -I${current_dir}/project_specific_lib/ -lhook -L${current_dir}/project_specific_lib/ -Wno-everything -I../include/ -I./include -c ../../poc2.c -o poc.o #> /dev/null
    # get exe
    wllvm -ggdb3 -Wall -W -o poc poc.o ./.libs/libxml2.a -I./include -L./.libs/ -lxml2 -lz -llzma -lm -ldl -lkleeRuntest -lkleeBasic -lhook -L${current_dir}/project_specific_lib/ -Wl,-rpath #> /dev/null
    # get .bc
    extract-bc -l llvm-link ${subject} #> /dev/null
      
    cd ..
    # copy target bc to root dir
    cp klee/${subject}.bc .
    cp klee/${subject}.bc ../
else
    cd ../../
    $LOWFAT_CLANG -fsanitize=lowfat -fsanitize=signed-integer-overflow,unsigned-integer-overflow -I./project/klee/include/ -I./project/include -L./project/klee/.libs/ -lxml2 -lstlimpl  poc.c -o poc
    cd ..
fi

cd ..
