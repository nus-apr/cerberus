server.name                = "www.example.org"

## bind to port (default: 80)
server.port                 = env.PORT


server.dir-listing          = "enable"

#server.event-handler        = "linux-sysepoll"
#server.event-handler        = "linux-rtsig"

server.modules              = (
				"mod_rewrite",
				"mod_setenv",
				"mod_access",
				"mod_auth",
				"mod_status",
				"mod_expire",
				"mod_simple_vhost",
				"mod_redirect",
				"mod_secdownload",
				"mod_ssi",
#				"mod_proxy",
				"mod_proxy_core",
				"mod_proxy_backend_fastcgi",
				"mod_cgi",
				"mod_compress",
				"mod_userdir",
				"mod_accesslog",
				)

server.indexfiles           = ( "index.php", "index.html", 
                                "index.htm", "default.htm" )

ssi.extension = ( ".shtml" )

######################## MODULE CONFIG ############################


accesslog.filename          = env.SRCDIR + "/tmp/lighttpd/logs/lighttpd.access.log"
server.errorlog             = env.SRCDIR + "/tmp/lighttpd/logs/lighttpd.error.log"

mimetype.assign             = ( ".png"  => "image/png", 
                                ".jpg"  => "image/jpeg",
                                ".jpeg" => "image/jpeg",
                                ".gif"  => "image/gif",
                                ".html" => "text/html",
                                ".htm"  => "text/html",
                                ".pdf"  => "application/pdf",
                                ".swf"  => "application/x-shockwave-flash",
                                ".spl"  => "application/futuresplash",
                                ".txt"  => "text/plain",
                                ".tar.gz" =>   "application/x-tgz",
                                ".tgz"  => "application/x-tgz",
                                ".gz"   => "application/x-gzip",
				".c"    => "text/plain",
				".conf" => "text/plain" )

compress.cache-dir          = env.SRCDIR + "/tmp/lighttpd/cache/compress/"
compress.filetype           = ("text/plain", "text/html")

setenv.add-environment      = ( "TRAC_ENV" => "tracenv", "SETENV" => "setenv")

cgi.assign                  = ( ".pl"  => "/usr/bin/perl",
                                ".cgi" => "/usr/bin/perl",
				".py"  => "/usr/bin/python" )
			
userdir.include-user = ( "jan" )
userdir.path = "/"

ssl.engine                  = "disable"
# ssl.pemfile                 = "server.pem"

auth.backend                = "plain"
auth.backend.plain.userfile = env.SRCDIR + "/tmp/lighttpd/lighttpd.user"
auth.backend.htpasswd.userfile = env.SRCDIR + "/tmp/lighttpd/lighttpd.htpasswd"
auth.backend.plain.groupfile = "lighttpd.group"

auth.backend.ldap.url       = "ldap://localhost/"
auth.backend.ldap.base-dn   = "dc=my-domain,dc=com"
auth.backend.ldap.filter    = "(uid=$)"

auth.require                = ( "/server-status" => 
                                ( 
				  "method"  => "digest",
				  "realm"   => "download archiv",
				  "require" => "valid-user"
				),
				"/auth.php" => 
                                ( 
				  "method"  => "basic",
				  "realm"   => "download archiv",
				  "require" => "user=jan"
				),
				"/server-config" => 
                                ( 
				  "method"  => "basic",
				  "realm"   => "download archiv",
				  "require" => "valid-user"
				)
                              )

url.access-deny             = ( "~", ".inc")

url.redirect                = ( "^/redirect/$" => "http://localhost:2048/" )

url.rewrite		    = ( "^/rewrite/foo($|\?.+)" => "/indexfile/rewrite.php$1",
				"^/rewrite/bar(?:$|\?(.+))" => "/indexfile/rewrite.php?bar&$1" )

#### status module
status.status-url           = "/server-status"
status.config-url           = "/server-config"

